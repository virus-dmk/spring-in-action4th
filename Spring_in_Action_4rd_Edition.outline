<ul><li><a class="l" href="#pf1" data-dest-detail='[1,"Fit"]'>Spring in Action</a></li><li><a class="l" href="#pf6" data-dest-detail='[6,"XYZ",66,448,null]'>brief contents</a></li><li><a class="l" href="#pf8" data-dest-detail='[8,"XYZ",66,448,null]'>contents</a></li><li><a class="l" href="#pf12" data-dest-detail='[18,"XYZ",66,448,null]'>preface</a></li><li><a class="l" href="#pf14" data-dest-detail='[20,"XYZ",66,448,null]'>acknowledgments</a></li><li><a class="l" href="#pf16" data-dest-detail='[22,"XYZ",66,448,null]'>about this book</a><ul><li><a class="l" href="#pf16" data-dest-detail='[22,"XYZ",66,155,null]'>Roadmap</a></li><li><a class="l" href="#pf18" data-dest-detail='[24,"XYZ",66,265,null]'>Code conventions and downloads</a></li><li><a class="l" href="#pf18" data-dest-detail='[24,"XYZ",66,122,null]'>Author Online</a></li><li><a class="l" href="#pf19" data-dest-detail='[25,"XYZ",57,464,null]'>About the author</a></li><li><a class="l" href="#pf19" data-dest-detail='[25,"XYZ",57,360,null]'>About the cover illustration</a></li></ul></li><li><a class="l" href="#pf1a" data-dest-detail='[26,"XYZ",90,523,null]'>Part 1 Core Spring</a><ul><li><a class="l" href="#pf1c" data-dest-detail='[28,"XYZ",78,554,null]'>1 Springing into action</a><ul><li><a class="l" href="#pf1d" data-dest-detail='[29,"XYZ",57,464,null]'>1.1 Simplifying Java development</a><ul><li><a class="l" href="#pf1e" data-dest-detail='[30,"XYZ",66,615,null]'>1.1.1 Unleashing the power of POJOs</a></li><li><a class="l" href="#pf1e" data-dest-detail='[30,"XYZ",66,233,null]'>1.1.2 Injecting dependencies</a></li><li><a class="l" href="#pf24" data-dest-detail='[36,"XYZ",66,437,null]'>1.1.3 Applying aspects</a></li><li><a class="l" href="#pf29" data-dest-detail='[41,"XYZ",57,528,null]'>1.1.4 Eliminating boilerplate code with templates</a></li></ul></li><li><a class="l" href="#pf2b" data-dest-detail='[43,"XYZ",57,418,null]'>1.2 Containing your beans</a><ul><li><a class="l" href="#pf2c" data-dest-detail='[44,"XYZ",66,528,null]'>1.2.1 Working with an application context</a></li><li><a class="l" href="#pf2d" data-dest-detail='[45,"XYZ",57,457,null]'>1.2.2 A bean’s life</a></li></ul></li><li><a class="l" href="#pf2e" data-dest-detail='[46,"XYZ",66,212,null]'>1.3 Surveying the Spring landscape</a><ul><li><a class="l" href="#pf2f" data-dest-detail='[47,"XYZ",57,615,null]'>1.3.1 Spring modules</a></li><li><a class="l" href="#pf31" data-dest-detail='[49,"XYZ",57,125,null]'>1.3.2 The Spring portfolio</a></li></ul></li><li><a class="l" href="#pf34" data-dest-detail='[52,"XYZ",66,408,null]'>1.4 What’s new in Spring</a><ul><li><a class="l" href="#pf34" data-dest-detail='[52,"XYZ",66,277,null]'>1.4.1 What was new in Spring 3.1?</a></li><li><a class="l" href="#pf35" data-dest-detail='[53,"XYZ",57,327,null]'>1.4.2 What was new in Spring 3.2?</a></li><li><a class="l" href="#pf36" data-dest-detail='[54,"XYZ",66,204,null]'>1.4.3 What’s new in Spring 4.0?</a></li></ul></li><li><a class="l" href="#pf37" data-dest-detail='[55,"XYZ",57,271,null]'>1.5 Summary</a></li></ul></li><li><a class="l" href="#pf39" data-dest-detail='[57,"XYZ",66,554,null]'>2 Wiring beans</a><ul><li><a class="l" href="#pf3a" data-dest-detail='[58,"XYZ",66,269,null]'>2.1 Exploring Spring’s configuration options</a></li><li><a class="l" href="#pf3b" data-dest-detail='[59,"XYZ",57,386,null]'>2.2 Automatically wiring beans</a><ul><li><a class="l" href="#pf3b" data-dest-detail='[59,"XYZ",57,167,null]'>2.2.1 Creating discoverable beans</a></li><li><a class="l" href="#pf3f" data-dest-detail='[63,"XYZ",57,615,null]'>2.2.2 Naming a component-scanned bean</a></li><li><a class="l" href="#pf3f" data-dest-detail='[63,"XYZ",57,247,null]'>2.2.3 Setting a base package for component scanning</a></li><li><a class="l" href="#pf40" data-dest-detail='[64,"XYZ",66,155,null]'>2.2.4 Annotating beans to be automatically wired</a></li><li><a class="l" href="#pf42" data-dest-detail='[66,"XYZ",66,164,null]'>2.2.5 Verifying automatic configuration</a></li></ul></li><li><a class="l" href="#pf44" data-dest-detail='[68,"XYZ",66,616,null]'>2.3 Wiring beans with Java</a><ul><li><a class="l" href="#pf44" data-dest-detail='[68,"XYZ",66,316,null]'>2.3.1 Creating a configuration class</a></li><li><a class="l" href="#pf45" data-dest-detail='[69,"XYZ",57,567,null]'>2.3.2 Declaring a simple bean</a></li><li><a class="l" href="#pf46" data-dest-detail='[70,"XYZ",66,615,null]'>2.3.3 Injecting with JavaConfig</a></li></ul></li><li><a class="l" href="#pf47" data-dest-detail='[71,"XYZ",57,171,null]'>2.4 Wiring beans with XML</a><ul><li><a class="l" href="#pf48" data-dest-detail='[72,"XYZ",66,489,null]'>2.4.1 Creating an XML configuration specification</a></li><li><a class="l" href="#pf49" data-dest-detail='[73,"XYZ",57,528,null]'>2.4.2 Declaring a simple &lt;bean&gt;</a></li><li><a class="l" href="#pf4a" data-dest-detail='[74,"XYZ",66,475,null]'>2.4.3 Initializing a bean with constructor injection</a></li><li><a class="l" href="#pf4f" data-dest-detail='[79,"XYZ",57,147,null]'>2.4.4 Setting properties</a></li></ul></li><li><a class="l" href="#pf54" data-dest-detail='[84,"XYZ",66,384,null]'>2.5 Importing and mixing configurations</a><ul><li><a class="l" href="#pf54" data-dest-detail='[84,"XYZ",66,176,null]'>2.5.1 Referencing XML configuration in JavaConfig</a></li><li><a class="l" href="#pf56" data-dest-detail='[86,"XYZ",66,279,null]'>2.5.2 Referencing JavaConfig in XML configuration</a></li></ul></li><li><a class="l" href="#pf58" data-dest-detail='[88,"XYZ",66,542,null]'>2.6 Summary</a></li></ul></li><li><a class="l" href="#pf59" data-dest-detail='[89,"XYZ",66,554,null]'>3 Advanced wiring</a><ul><li><a class="l" href="#pf59" data-dest-detail='[89,"XYZ",66,173,null]'>3.1 Environments and profiles</a><ul><li><a class="l" href="#pf5b" data-dest-detail='[91,"XYZ",57,319,null]'>3.1.1 Configuring profile beans</a></li><li><a class="l" href="#pf5f" data-dest-detail='[95,"XYZ",57,429,null]'>3.1.2 Activating profiles</a></li></ul></li><li><a class="l" href="#pf61" data-dest-detail='[97,"XYZ",57,405,null]'>3.2 Conditional beans</a></li><li><a class="l" href="#pf64" data-dest-detail='[100,"XYZ",66,326,null]'>3.3 Addressing ambiguity in autowiring</a><ul><li><a class="l" href="#pf65" data-dest-detail='[101,"XYZ",57,346,null]'>3.3.1 Designating a primary bean</a></li><li><a class="l" href="#pf66" data-dest-detail='[102,"XYZ",66,379,null]'>3.3.2 Qualifying autowired beans</a></li></ul></li><li><a class="l" href="#pf6a" data-dest-detail='[106,"XYZ",66,556,null]'>3.4 Scoping beans</a><ul><li><a class="l" href="#pf6b" data-dest-detail='[107,"XYZ",57,500,null]'>3.4.1 Working with request and session scope</a></li><li><a class="l" href="#pf6d" data-dest-detail='[109,"XYZ",57,615,null]'>3.4.2 Declaring scoped proxies in XML</a></li></ul></li><li><a class="l" href="#pf6d" data-dest-detail='[109,"XYZ",57,165,null]'>3.5 Runtime value injection</a><ul><li><a class="l" href="#pf6e" data-dest-detail='[110,"XYZ",66,305,null]'>3.5.1 Injecting external values</a></li><li><a class="l" href="#pf72" data-dest-detail='[114,"XYZ",66,615,null]'>3.5.2 Wiring with the Spring Expression Language</a></li></ul></li><li><a class="l" href="#pf78" data-dest-detail='[120,"XYZ",66,355,null]'>3.6 Summary</a></li></ul></li><li><a class="l" href="#pf7a" data-dest-detail='[122,"XYZ",78,554,null]'>4 Aspect-oriented Spring</a><ul><li><a class="l" href="#pf7b" data-dest-detail='[123,"XYZ",57,204,null]'>4.1 What is aspect-oriented programming?</a><ul><li><a class="l" href="#pf7c" data-dest-detail='[124,"XYZ",66,359,null]'>4.1.1 Defining AOP terminology</a></li><li><a class="l" href="#pf7e" data-dest-detail='[126,"XYZ",66,170,null]'>4.1.2 Spring’s AOP support</a></li></ul></li><li><a class="l" href="#pf80" data-dest-detail='[128,"XYZ",66,147,null]'>4.2 Selecting join points with pointcuts</a><ul><li><a class="l" href="#pf81" data-dest-detail='[129,"XYZ",57,114,null]'>4.2.1 Writing pointcuts</a></li><li><a class="l" href="#pf83" data-dest-detail='[131,"XYZ",57,615,null]'>4.2.2 Selecting beans in pointcuts</a></li></ul></li><li><a class="l" href="#pf83" data-dest-detail='[131,"XYZ",57,383,null]'>4.3 Creating annotated aspects</a><ul><li><a class="l" href="#pf83" data-dest-detail='[131,"XYZ",57,278,null]'>4.3.1 Defining an aspect</a></li><li><a class="l" href="#pf87" data-dest-detail='[135,"XYZ",57,175,null]'>4.3.2 Creating around advice</a></li><li><a class="l" href="#pf89" data-dest-detail='[137,"XYZ",57,615,null]'>4.3.3 Handling parameters in advice</a></li><li><a class="l" href="#pf8c" data-dest-detail='[140,"XYZ",66,505,null]'>4.3.4 Annotating introductions</a></li></ul></li><li><a class="l" href="#pf8e" data-dest-detail='[142,"XYZ",66,372,null]'>4.4 Declaring aspects in XML</a><ul><li><a class="l" href="#pf8f" data-dest-detail='[143,"XYZ",57,132,null]'>4.4.1 Declaring before and after advice</a></li><li><a class="l" href="#pf92" data-dest-detail='[146,"XYZ",66,430,null]'>4.4.2 Declaring around advice</a></li><li><a class="l" href="#pf93" data-dest-detail='[147,"XYZ",57,262,null]'>4.4.3 Passing parameters to advice</a></li><li><a class="l" href="#pf95" data-dest-detail='[149,"XYZ",57,425,null]'>4.4.4 Introducing new functionality with aspects</a></li></ul></li><li><a class="l" href="#pf96" data-dest-detail='[150,"XYZ",66,471,null]'>4.5 Injecting AspectJ aspects</a></li><li><a class="l" href="#pf98" data-dest-detail='[152,"XYZ",66,157,null]'>4.6 Summary</a></li></ul></li></ul></li><li><a class="l" href="#pf9a" data-dest-detail='[154,"XYZ",90,523,null]'>Part 2 Spring on the web</a><ul><li><a class="l" href="#pf9c" data-dest-detail='[156,"XYZ",78,554,null]'>5 Building Spring web applications</a><ul><li><a class="l" href="#pf9d" data-dest-detail='[157,"XYZ",57,581,null]'>5.1 Getting started with Spring MVC</a><ul><li><a class="l" href="#pf9d" data-dest-detail='[157,"XYZ",57,372,null]'>5.1.1 Following the life of a request</a></li><li><a class="l" href="#pf9f" data-dest-detail='[159,"XYZ",57,615,null]'>5.1.2 Setting up Spring MVC</a></li><li><a class="l" href="#pfa3" data-dest-detail='[163,"XYZ",57,153,null]'>5.1.3 Introducing the Spittr application</a></li></ul></li><li><a class="l" href="#pfa4" data-dest-detail='[164,"XYZ",66,425,null]'>5.2 Writing a simple controller</a><ul><li><a class="l" href="#pfa5" data-dest-detail='[165,"XYZ",57,128,null]'>5.2.1 Testing the controller</a></li><li><a class="l" href="#pfa7" data-dest-detail='[167,"XYZ",57,202,null]'>5.2.2 Defining class-level request handling</a></li><li><a class="l" href="#pfa8" data-dest-detail='[168,"XYZ",66,196,null]'>5.2.3 Passing model data to the view</a></li></ul></li><li><a class="l" href="#pfad" data-dest-detail='[173,"XYZ",57,192,null]'>5.3 Accepting request input</a><ul><li><a class="l" href="#pfae" data-dest-detail='[174,"XYZ",66,232,null]'>5.3.1 Taking query parameters</a></li><li><a class="l" href="#pfb0" data-dest-detail='[176,"XYZ",66,323,null]'>5.3.2 Taking input via path parameters</a></li></ul></li><li><a class="l" href="#pfb3" data-dest-detail='[179,"XYZ",57,357,null]'>5.4 Processing forms</a><ul><li><a class="l" href="#pfb5" data-dest-detail='[181,"XYZ",57,188,null]'>5.4.1 Writing a form-handling controller</a></li><li><a class="l" href="#pfb8" data-dest-detail='[184,"XYZ",66,384,null]'>5.4.2 Validating forms</a></li></ul></li><li><a class="l" href="#pfbb" data-dest-detail='[187,"XYZ",57,134,null]'>5.5 Summary</a></li></ul></li><li><a class="l" href="#pfbd" data-dest-detail='[189,"XYZ",66,554,null]'>6 Rendering web views</a><ul><li><a class="l" href="#pfbd" data-dest-detail='[189,"XYZ",66,214,null]'>6.1 Understanding view resolution</a></li><li><a class="l" href="#pfc0" data-dest-detail='[192,"XYZ",66,438,null]'>6.2 Creating JSP views</a><ul><li><a class="l" href="#pfc0" data-dest-detail='[192,"XYZ",66,128,null]'>6.2.1 Configuring a JSP-ready view resolver</a></li><li><a class="l" href="#pfc2" data-dest-detail='[194,"XYZ",66,266,null]'>6.2.2 Using Spring’s JSP libraries</a></li></ul></li><li><a class="l" href="#pfcf" data-dest-detail='[207,"XYZ",57,616,null]'>6.3 Defining a layout with Apache Tiles views</a><ul><li><a class="l" href="#pfcf" data-dest-detail='[207,"XYZ",57,433,null]'>6.3.1 Configuring a Tiles view resolver</a></li></ul></li><li><a class="l" href="#pfd4" data-dest-detail='[212,"XYZ",66,568,null]'>6.4 Working with Thymeleaf</a><ul><li><a class="l" href="#pfd4" data-dest-detail='[212,"XYZ",66,207,null]'>6.4.1 Configuring a Thymeleaf view resolver</a></li><li><a class="l" href="#pfd6" data-dest-detail='[214,"XYZ",66,489,null]'>6.4.2 Defining Thymeleaf templates</a></li></ul></li><li><a class="l" href="#pfda" data-dest-detail='[218,"XYZ",66,581,null]'>6.5 Summary</a></li></ul></li><li><a class="l" href="#pfdb" data-dest-detail='[219,"XYZ",66,554,null]'>7 Advanced Spring MVC</a><ul><li><a class="l" href="#pfdc" data-dest-detail='[220,"XYZ",66,516,null]'>7.1 Alternate Spring MVC configuration</a><ul><li><a class="l" href="#pfdc" data-dest-detail='[220,"XYZ",66,320,null]'>7.1.1 Customizing DispatcherServlet configuration</a></li><li><a class="l" href="#pfdd" data-dest-detail='[221,"XYZ",57,492,null]'>7.1.2 Adding additional servlets and filters</a></li><li><a class="l" href="#pfde" data-dest-detail='[222,"XYZ",66,139,null]'>7.1.3 Declaring DispatcherServlet in web.xml</a></li></ul></li><li><a class="l" href="#pfe1" data-dest-detail='[225,"XYZ",57,313,null]'>7.2 Processing multipart form data</a><ul><li><a class="l" href="#pfe2" data-dest-detail='[226,"XYZ",66,215,null]'>7.2.1 Configuring a multipart resolver</a></li><li><a class="l" href="#pfe6" data-dest-detail='[230,"XYZ",66,615,null]'>7.2.2 Handling multipart requests</a></li></ul></li><li><a class="l" href="#pfe9" data-dest-detail='[233,"XYZ",57,164,null]'>7.3 Handling exceptions</a><ul><li><a class="l" href="#pfea" data-dest-detail='[234,"XYZ",66,491,null]'>7.3.1 Mapping exceptions to HTTP status codes</a></li><li><a class="l" href="#pfec" data-dest-detail='[236,"XYZ",66,615,null]'>7.3.2 Writing exception-handling methods</a></li></ul></li><li><a class="l" href="#pfed" data-dest-detail='[237,"XYZ",57,327,null]'>7.4 Advising controllers</a></li><li><a class="l" href="#pfee" data-dest-detail='[238,"XYZ",66,297,null]'>7.5 Carrying data across redirect requests</a><ul><li><a class="l" href="#pfef" data-dest-detail='[239,"XYZ",57,339,null]'>7.5.1 Redirecting with URL templates</a></li><li><a class="l" href="#pff0" data-dest-detail='[240,"XYZ",66,257,null]'>7.5.2 Working with flash attributes</a></li></ul></li><li><a class="l" href="#pff2" data-dest-detail='[242,"XYZ",66,388,null]'>7.6 Summary</a></li></ul></li><li><a class="l" href="#pff4" data-dest-detail='[244,"XYZ",78,554,null]'>8 Working with Spring Web Flow</a><ul><li><a class="l" href="#pff5" data-dest-detail='[245,"XYZ",57,401,null]'>8.1 Configuring Web Flow in Spring</a><ul><li><a class="l" href="#pff5" data-dest-detail='[245,"XYZ",57,133,null]'>8.1.1 Wiring a flow executor</a></li><li><a class="l" href="#pff6" data-dest-detail='[246,"XYZ",66,532,null]'>8.1.2 Configuring a flow registry</a></li><li><a class="l" href="#pff7" data-dest-detail='[247,"XYZ",57,615,null]'>8.1.3 Handling flow requests</a></li></ul></li><li><a class="l" href="#pff7" data-dest-detail='[247,"XYZ",57,226,null]'>8.2 The components of a flow</a><ul><li><a class="l" href="#pff8" data-dest-detail='[248,"XYZ",66,554,null]'>8.2.1 States</a></li><li><a class="l" href="#pffb" data-dest-detail='[251,"XYZ",57,431,null]'>8.2.2 Transitions</a></li><li><a class="l" href="#pffc" data-dest-detail='[252,"XYZ",66,310,null]'>8.2.3 Flow data</a></li></ul></li><li><a class="l" href="#pffe" data-dest-detail='[254,"XYZ",66,568,null]'>8.3 Putting it all together: the pizza flow</a><ul><li><a class="l" href="#pffe" data-dest-detail='[254,"XYZ",66,450,null]'>8.3.1 Defining the base flow</a></li><li><a class="l" href="#pf101" data-dest-detail='[257,"XYZ",57,149,null]'>8.3.2 Collecting customer information</a></li><li><a class="l" href="#pf107" data-dest-detail='[263,"XYZ",57,463,null]'>8.3.3 Building an order</a></li><li><a class="l" href="#pf109" data-dest-detail='[265,"XYZ",57,221,null]'>8.3.4 Taking payment</a></li></ul></li><li><a class="l" href="#pf10b" data-dest-detail='[267,"XYZ",57,427,null]'>8.4 Securing web flows</a></li><li><a class="l" href="#pf10b" data-dest-detail='[267,"XYZ",57,164,null]'>8.5 Summary</a></li></ul></li><li><a class="l" href="#pf10d" data-dest-detail='[269,"XYZ",66,554,null]'>9 Securing web applications</a><ul><li><a class="l" href="#pf10e" data-dest-detail='[270,"XYZ",66,438,null]'>9.1 Getting started with Spring Security</a><ul><li><a class="l" href="#pf10f" data-dest-detail='[271,"XYZ",57,615,null]'>9.1.1 Understanding Spring Security modules</a></li><li><a class="l" href="#pf10f" data-dest-detail='[271,"XYZ",57,197,null]'>9.1.2 Filtering web requests</a></li><li><a class="l" href="#pf111" data-dest-detail='[273,"XYZ",57,580,null]'>9.1.3 Writing a simple security configuration</a></li></ul></li><li><a class="l" href="#pf113" data-dest-detail='[275,"XYZ",57,440,null]'>9.2 Selecting user details services</a><ul><li><a class="l" href="#pf114" data-dest-detail='[276,"XYZ",66,615,null]'>9.2.1 Working with an in-memory user store</a></li><li><a class="l" href="#pf115" data-dest-detail='[277,"XYZ",57,137,null]'>9.2.2 Authenticating against database tables</a></li><li><a class="l" href="#pf118" data-dest-detail='[280,"XYZ",66,515,null]'>9.2.3 Applying LDAP-backed authentication</a></li><li><a class="l" href="#pf11c" data-dest-detail='[284,"XYZ",66,615,null]'>9.2.4 Configuring a custom user service</a></li></ul></li><li><a class="l" href="#pf11d" data-dest-detail='[285,"XYZ",57,258,null]'>9.3 Intercepting requests</a><ul><li><a class="l" href="#pf120" data-dest-detail='[288,"XYZ",66,528,null]'>9.3.1 Securing with Spring Expressions</a></li><li><a class="l" href="#pf121" data-dest-detail='[289,"XYZ",57,360,null]'>9.3.2 Enforcing channel security</a></li><li><a class="l" href="#pf122" data-dest-detail='[290,"XYZ",66,256,null]'>9.3.3 Preventing cross-site request forgery</a></li></ul></li><li><a class="l" href="#pf124" data-dest-detail='[292,"XYZ",66,581,null]'>9.4 Authenticating users</a><ul><li><a class="l" href="#pf125" data-dest-detail='[293,"XYZ",57,615,null]'>9.4.1 Adding a custom login page</a></li><li><a class="l" href="#pf126" data-dest-detail='[294,"XYZ",66,488,null]'>9.4.2 Enabling HTTP Basic authentication</a></li><li><a class="l" href="#pf127" data-dest-detail='[295,"XYZ",57,615,null]'>9.4.3 Enabling remember-me functionality</a></li><li><a class="l" href="#pf127" data-dest-detail='[295,"XYZ",57,139,null]'>9.4.4 Logging out</a></li></ul></li><li><a class="l" href="#pf128" data-dest-detail='[296,"XYZ",66,197,null]'>9.5 Securing the view</a><ul><li><a class="l" href="#pf129" data-dest-detail='[297,"XYZ",57,555,null]'>9.5.1 Using Spring Security’s JSP tag library</a></li><li><a class="l" href="#pf12c" data-dest-detail='[300,"XYZ",66,385,null]'>9.5.2 Working with Thymeleaf’s Spring Security dialect</a></li></ul></li><li><a class="l" href="#pf12e" data-dest-detail='[302,"XYZ",66,616,null]'>9.6 Summary</a></li></ul></li></ul></li><li><a class="l" href="#pf130" data-dest-detail='[304,"XYZ",90,523,null]'>Part 3 Spring in the back end</a><ul><li><a class="l" href="#pf132" data-dest-detail='[306,"XYZ",78,554,null]'>10 Hitting the database with Spring and JDBC</a><ul><li><a class="l" href="#pf133" data-dest-detail='[307,"XYZ",57,477,null]'>10.1 Learning Spring’s data-access philosophy</a><ul><li><a class="l" href="#pf134" data-dest-detail='[308,"XYZ",66,365,null]'>10.1.1 Getting to know Spring’s data-access exception hierarchy</a></li><li><a class="l" href="#pf137" data-dest-detail='[311,"XYZ",57,567,null]'>10.1.2 Templating data access</a></li></ul></li><li><a class="l" href="#pf139" data-dest-detail='[313,"XYZ",57,464,null]'>10.2 Configuring a data source</a><ul><li><a class="l" href="#pf139" data-dest-detail='[313,"XYZ",57,296,null]'>10.2.1 Using JNDI data sources</a></li><li><a class="l" href="#pf13a" data-dest-detail='[314,"XYZ",66,371,null]'>10.2.2 Using a pooled data source</a></li><li><a class="l" href="#pf13c" data-dest-detail='[316,"XYZ",66,615,null]'>10.2.3 Using JDBC driver-based data sources</a></li><li><a class="l" href="#pf13d" data-dest-detail='[317,"XYZ",57,567,null]'>10.2.4 Using an embedded data source</a></li><li><a class="l" href="#pf13e" data-dest-detail='[318,"XYZ",66,410,null]'>10.2.5 Using profiles to select a data source</a></li></ul></li><li><a class="l" href="#pf140" data-dest-detail='[320,"XYZ",66,333,null]'>10.3 Using JDBC with Spring</a><ul><li><a class="l" href="#pf141" data-dest-detail='[321,"XYZ",57,615,null]'>10.3.1 Tackling runaway JDBC code</a></li><li><a class="l" href="#pf144" data-dest-detail='[324,"XYZ",66,554,null]'>10.3.2 Working with JDBC templates</a></li></ul></li><li><a class="l" href="#pf149" data-dest-detail='[329,"XYZ",57,568,null]'>10.4 Summary</a></li></ul></li><li><a class="l" href="#pf14a" data-dest-detail='[330,"XYZ",78,554,null]'>11 Persisting data with object-relational mapping</a><ul><li><a class="l" href="#pf14c" data-dest-detail='[332,"XYZ",66,616,null]'>11.1 Integrating Hibernate with Spring</a><ul><li><a class="l" href="#pf14c" data-dest-detail='[332,"XYZ",66,472,null]'>11.1.1 Declaring a Hibernate session factory</a></li><li><a class="l" href="#pf14e" data-dest-detail='[334,"XYZ",66,434,null]'>11.1.2 Building Spring-free Hibernate</a></li></ul></li><li><a class="l" href="#pf150" data-dest-detail='[336,"XYZ",66,616,null]'>11.2 Spring and the Java Persistence API</a><ul><li><a class="l" href="#pf150" data-dest-detail='[336,"XYZ",66,446,null]'>11.2.1 Configuring an entity manager factory</a></li><li><a class="l" href="#pf155" data-dest-detail='[341,"XYZ",57,615,null]'>11.2.2 Writing a JPA-based repository</a></li></ul></li><li><a class="l" href="#pf157" data-dest-detail='[343,"XYZ",57,230,null]'>11.3 Automatic JPA repositories with Spring Data</a><ul><li><a class="l" href="#pf159" data-dest-detail='[345,"XYZ",57,209,null]'>11.3.1 Defining query methods</a></li><li><a class="l" href="#pf15c" data-dest-detail='[348,"XYZ",66,192,null]'>11.3.2 Declaring custom queries</a></li><li><a class="l" href="#pf15d" data-dest-detail='[349,"XYZ",57,256,null]'>11.3.3 Mixing in custom functionality</a></li></ul></li><li><a class="l" href="#pf15f" data-dest-detail='[351,"XYZ",57,442,null]'>11.4 Summary</a></li></ul></li><li><a class="l" href="#pf160" data-dest-detail='[352,"XYZ",78,554,null]'>12 Working with NoSQL databases</a><ul><li><a class="l" href="#pf161" data-dest-detail='[353,"XYZ",57,399,null]'>12.1 Persisting documents with MongoDB</a><ul><li><a class="l" href="#pf162" data-dest-detail='[354,"XYZ",66,342,null]'>12.1.1 Enabling MongoDB</a></li><li><a class="l" href="#pf165" data-dest-detail='[357,"XYZ",57,221,null]'>12.1.2 Annotating model types for MongoDB persistence</a></li><li><a class="l" href="#pf168" data-dest-detail='[360,"XYZ",66,185,null]'>12.1.3 Accessing MongoDB with MongoTemplate</a></li><li><a class="l" href="#pf16a" data-dest-detail='[362,"XYZ",66,615,null]'>12.1.4 Writing a MongoDB repository</a></li></ul></li><li><a class="l" href="#pf16e" data-dest-detail='[366,"XYZ",66,139,null]'>12.2 Working with graph data in Neo4j</a><ul><li><a class="l" href="#pf16f" data-dest-detail='[367,"XYZ",57,450,null]'>12.2.1 Configuring Spring Data Neo4j</a></li><li><a class="l" href="#pf171" data-dest-detail='[369,"XYZ",57,238,null]'>12.2.2 Annotating graph entities</a></li><li><a class="l" href="#pf175" data-dest-detail='[373,"XYZ",57,463,null]'>12.2.3 Working with Neo4jTemplate</a></li><li><a class="l" href="#pf176" data-dest-detail='[374,"XYZ",66,230,null]'>12.2.4 Creating automatic Neo4j repositories</a></li></ul></li><li><a class="l" href="#pf17b" data-dest-detail='[379,"XYZ",57,529,null]'>12.3 Working with key-value data in Redis</a><ul><li><a class="l" href="#pf17b" data-dest-detail='[379,"XYZ",57,320,null]'>12.3.1 Connecting to Redis</a></li><li><a class="l" href="#pf17c" data-dest-detail='[380,"XYZ",66,158,null]'>12.3.2 Working with RedisTemplate</a></li><li><a class="l" href="#pf180" data-dest-detail='[384,"XYZ",66,210,null]'>12.3.3 Setting key and value serializers</a></li></ul></li><li><a class="l" href="#pf181" data-dest-detail='[385,"XYZ",57,298,null]'>12.4 Summary</a></li></ul></li><li><a class="l" href="#pf183" data-dest-detail='[387,"XYZ",66,554,null]'>13 Caching data</a><ul><li><a class="l" href="#pf184" data-dest-detail='[388,"XYZ",66,490,null]'>13.1 Enabling cache support</a><ul><li><a class="l" href="#pf185" data-dest-detail='[389,"XYZ",57,227,null]'>13.1.1 Configuring a cache manager</a></li></ul></li><li><a class="l" href="#pf189" data-dest-detail='[393,"XYZ",57,276,null]'>13.2 Annotating methods for caching</a><ul><li><a class="l" href="#pf18a" data-dest-detail='[394,"XYZ",66,478,null]'>13.2.1 Populating the cache</a></li><li><a class="l" href="#pf18e" data-dest-detail='[398,"XYZ",66,450,null]'>13.2.2 Removing cache entries</a></li></ul></li><li><a class="l" href="#pf18f" data-dest-detail='[399,"XYZ",57,383,null]'>13.3 Declaring caching in XML</a></li><li><a class="l" href="#pf193" data-dest-detail='[403,"XYZ",57,484,null]'>13.4 Summary</a></li></ul></li><li><a class="l" href="#pf194" data-dest-detail='[404,"XYZ",78,554,null]'>14 Securing methods</a><ul><li><a class="l" href="#pf195" data-dest-detail='[405,"XYZ",57,516,null]'>14.1 Securing methods with annotations</a><ul><li><a class="l" href="#pf195" data-dest-detail='[405,"XYZ",57,257,null]'>14.1.1 Restricting method access with @Secured</a></li><li><a class="l" href="#pf197" data-dest-detail='[407,"XYZ",57,567,null]'>14.1.2 Using JSR-250’s @RolesAllowed with Spring Security</a></li></ul></li><li><a class="l" href="#pf198" data-dest-detail='[408,"XYZ",66,616,null]'>14.2 Using expressions for method-level security</a><ul><li><a class="l" href="#pf198" data-dest-detail='[408,"XYZ",66,147,null]'>14.2.1 Expressing method access rules</a></li><li><a class="l" href="#pf19a" data-dest-detail='[410,"XYZ",66,139,null]'>14.2.2 Filtering method inputs and outputs</a></li></ul></li><li><a class="l" href="#pf19f" data-dest-detail='[415,"XYZ",57,424,null]'>14.3 Summary</a></li></ul></li></ul></li><li><a class="l" href="#pf1a0" data-dest-detail='[416,"XYZ",90,523,null]'>Part 4 Integrating Spring</a><ul><li><a class="l" href="#pf1a2" data-dest-detail='[418,"XYZ",78,554,null]'>15 Working with remote services</a><ul><li><a class="l" href="#pf1a3" data-dest-detail='[419,"XYZ",57,374,null]'>15.1 An overview of Spring remoting</a></li><li><a class="l" href="#pf1a5" data-dest-detail='[421,"XYZ",57,185,null]'>15.2 Working with RMI</a><ul><li><a class="l" href="#pf1a6" data-dest-detail='[422,"XYZ",66,528,null]'>15.2.1 Exporting an RMI service</a></li><li><a class="l" href="#pf1a8" data-dest-detail='[424,"XYZ",66,422,null]'>15.2.2 Wiring an RMI service</a></li></ul></li><li><a class="l" href="#pf1ab" data-dest-detail='[427,"XYZ",57,616,null]'>15.3 Exposing remote services with Hessian and Burlap</a><ul><li><a class="l" href="#pf1ab" data-dest-detail='[427,"XYZ",57,303,null]'>15.3.1 Exposing bean functionality with Hessian/Burlap</a></li><li><a class="l" href="#pf1ae" data-dest-detail='[430,"XYZ",66,372,null]'>15.3.2 Accessing Hessian/Burlap services</a></li></ul></li><li><a class="l" href="#pf1b0" data-dest-detail='[432,"XYZ",66,616,null]'>15.4 Using Spring’s HttpInvoker</a><ul><li><a class="l" href="#pf1b0" data-dest-detail='[432,"XYZ",66,446,null]'>15.4.1 Exposing beans as HTTP services</a></li><li><a class="l" href="#pf1b1" data-dest-detail='[433,"XYZ",57,211,null]'>15.4.2 Accessing services via HTTP</a></li></ul></li><li><a class="l" href="#pf1b3" data-dest-detail='[435,"XYZ",57,568,null]'>15.5 Publishing and consuming web services</a><ul><li><a class="l" href="#pf1b3" data-dest-detail='[435,"XYZ",57,320,null]'>15.5.1 Creating Spring-enabled JAX-WS endpoints</a></li><li><a class="l" href="#pf1b6" data-dest-detail='[438,"XYZ",66,226,null]'>15.5.2 Proxying JAX-WS services on the client side</a></li></ul></li><li><a class="l" href="#pf1b8" data-dest-detail='[440,"XYZ",66,477,null]'>15.6 Summary</a></li></ul></li><li><a class="l" href="#pf1b9" data-dest-detail='[441,"XYZ",66,554,null]'>16 Creating REST APIs with Spring MVC</a><ul><li><a class="l" href="#pf1ba" data-dest-detail='[442,"XYZ",66,451,null]'>16.1 Getting REST</a><ul><li><a class="l" href="#pf1ba" data-dest-detail='[442,"XYZ",66,281,null]'>16.1.1 The fundamentals of REST</a></li><li><a class="l" href="#pf1bb" data-dest-detail='[443,"XYZ",57,290,null]'>16.1.2 How Spring supports REST</a></li></ul></li><li><a class="l" href="#pf1bc" data-dest-detail='[444,"XYZ",66,470,null]'>16.2 Creating your first REST endpoint</a><ul><li><a class="l" href="#pf1be" data-dest-detail='[446,"XYZ",66,440,null]'>16.2.1 Negotiating resource representation</a></li><li><a class="l" href="#pf1c3" data-dest-detail='[451,"XYZ",57,143,null]'>16.2.2 Working with HTTP message converters</a></li></ul></li><li><a class="l" href="#pf1c9" data-dest-detail='[457,"XYZ",57,398,null]'>16.3 Serving more than resources</a><ul><li><a class="l" href="#pf1c9" data-dest-detail='[457,"XYZ",57,293,null]'>16.3.1 Communicating errors to the client</a></li><li><a class="l" href="#pf1cd" data-dest-detail='[461,"XYZ",57,205,null]'>16.3.2 Setting headers in the response</a></li></ul></li><li><a class="l" href="#pf1d0" data-dest-detail='[464,"XYZ",66,504,null]'>16.4 Consuming REST resources</a><ul><li><a class="l" href="#pf1d1" data-dest-detail='[465,"XYZ",57,528,null]'>16.4.1 Exploring RestTemplate’s operations</a></li><li><a class="l" href="#pf1d2" data-dest-detail='[466,"XYZ",66,413,null]'>16.4.2 GETting resources</a></li><li><a class="l" href="#pf1d3" data-dest-detail='[467,"XYZ",57,615,null]'>16.4.3 Retrieving resources</a></li><li><a class="l" href="#pf1d4" data-dest-detail='[468,"XYZ",66,615,null]'>16.4.4 Extracting response metadata</a></li><li><a class="l" href="#pf1d5" data-dest-detail='[469,"XYZ",57,478,null]'>16.4.5 PUTting resources</a></li><li><a class="l" href="#pf1d6" data-dest-detail='[470,"XYZ",66,238,null]'>16.4.6 DELETEing resources</a></li><li><a class="l" href="#pf1d7" data-dest-detail='[471,"XYZ",57,433,null]'>16.4.7 POSTing resource data</a></li><li><a class="l" href="#pf1d7" data-dest-detail='[471,"XYZ",57,303,null]'>16.4.8 Receiving object responses from POST requests</a></li><li><a class="l" href="#pf1d9" data-dest-detail='[473,"XYZ",57,615,null]'>16.4.9 Receiving a resource location after a POST request</a></li><li><a class="l" href="#pf1d9" data-dest-detail='[473,"XYZ",57,250,null]'>16.4.10 Exchanging resources</a></li></ul></li><li><a class="l" href="#pf1db" data-dest-detail='[475,"XYZ",57,275,null]'>16.5 Summary</a></li></ul></li><li><a class="l" href="#pf1dd" data-dest-detail='[477,"XYZ",66,554,null]'>17 Messaging in Spring</a><ul><li><a class="l" href="#pf1de" data-dest-detail='[478,"XYZ",66,321,null]'>17.1 A brief introduction to asynchronous messaging</a><ul><li><a class="l" href="#pf1df" data-dest-detail='[479,"XYZ",57,385,null]'>17.1.1 Sending messages</a></li><li><a class="l" href="#pf1e1" data-dest-detail='[481,"XYZ",57,235,null]'>17.1.2 Assessing the benefits of asynchronous messaging</a></li></ul></li><li><a class="l" href="#pf1e3" data-dest-detail='[483,"XYZ",57,460,null]'>17.2 Sending messages with JMS</a><ul><li><a class="l" href="#pf1e3" data-dest-detail='[483,"XYZ",57,251,null]'>17.2.1 Setting up a message broker in Spring</a></li><li><a class="l" href="#pf1e5" data-dest-detail='[485,"XYZ",57,188,null]'>17.2.2 Using Spring’s JMS template</a></li><li><a class="l" href="#pf1ee" data-dest-detail='[494,"XYZ",66,450,null]'>17.2.3 Creating message-driven POJOs</a></li><li><a class="l" href="#pf1f1" data-dest-detail='[497,"XYZ",57,541,null]'>17.2.4 Using message-based RPC</a></li></ul></li><li><a class="l" href="#pf1f3" data-dest-detail='[499,"XYZ",57,229,null]'>17.3 Messaging with AMQP</a><ul><li><a class="l" href="#pf1f4" data-dest-detail='[500,"XYZ",66,424,null]'>17.3.1 A brief introduction to AMQP</a></li><li><a class="l" href="#pf1f6" data-dest-detail='[502,"XYZ",66,615,null]'>17.3.2 Configuring Spring for AMQP messaging</a></li><li><a class="l" href="#pf1f8" data-dest-detail='[504,"XYZ",66,126,null]'>17.3.3 Sending messages with RabbitTemplate</a></li><li><a class="l" href="#pf1fb" data-dest-detail='[507,"XYZ",57,615,null]'>17.3.4 Receiving AMQP messages</a></li></ul></li><li><a class="l" href="#pf1fd" data-dest-detail='[509,"XYZ",57,393,null]'>17.4 Summary</a></li></ul></li><li><a class="l" href="#pf1fe" data-dest-detail='[510,"XYZ",78,554,null]'>18 Messaging with WebSocket and STOMP</a><ul><li><a class="l" href="#pf1ff" data-dest-detail='[511,"XYZ",57,537,null]'>18.1 Working with Spring’s low-level WebSocket API</a></li><li><a class="l" href="#pf204" data-dest-detail='[516,"XYZ",66,616,null]'>18.2 Coping with a lack of WebSocket support</a></li><li><a class="l" href="#pf206" data-dest-detail='[518,"XYZ",66,180,null]'>18.3 Working with STOMP messaging</a><ul><li><a class="l" href="#pf208" data-dest-detail='[520,"XYZ",57,615,null]'>18.3.1 Enabling STOMP messaging</a></li><li><a class="l" href="#pf20b" data-dest-detail='[523,"XYZ",57,478,null]'>18.3.2 Handling STOMP messages from the client</a></li><li><a class="l" href="#pf20e" data-dest-detail='[526,"XYZ",57,242,null]'>18.3.3 Sending messages to the client</a></li></ul></li><li><a class="l" href="#pf212" data-dest-detail='[530,"XYZ",66,503,null]'>18.4 Working with user-targeted messages</a><ul><li><a class="l" href="#pf212" data-dest-detail='[530,"XYZ",66,205,null]'>18.4.1 Working with user messages in a controller</a></li><li><a class="l" href="#pf214" data-dest-detail='[532,"XYZ",57,177,null]'>18.4.2 Sending messages to a specific user</a></li></ul></li><li><a class="l" href="#pf215" data-dest-detail='[533,"XYZ",66,188,null]'>18.5 Handling message exceptions</a></li><li><a class="l" href="#pf216" data-dest-detail='[534,"XYZ",66,200,null]'>18.6 Summary</a></li></ul></li><li><a class="l" href="#pf218" data-dest-detail='[536,"XYZ",78,554,null]'>19 Sending email with Spring</a><ul><li><a class="l" href="#pf219" data-dest-detail='[537,"XYZ",57,542,null]'>19.1 Configuring Spring to send email</a><ul><li><a class="l" href="#pf219" data-dest-detail='[537,"XYZ",57,424,null]'>19.1.1 Configuring a mail sender</a></li><li><a class="l" href="#pf21b" data-dest-detail='[539,"XYZ",57,615,null]'>19.1.2 Wiring and using the mail sender</a></li></ul></li><li><a class="l" href="#pf21c" data-dest-detail='[540,"XYZ",66,616,null]'>19.2 Constructing rich email messages</a><ul><li><a class="l" href="#pf21c" data-dest-detail='[540,"XYZ",66,485,null]'>19.2.1 Adding attachments</a></li><li><a class="l" href="#pf21d" data-dest-detail='[541,"XYZ",66,257,null]'>19.2.2 Sending email with rich content</a></li></ul></li><li><a class="l" href="#pf21e" data-dest-detail='[542,"XYZ",66,175,null]'>19.3 Generating email with templates</a><ul><li><a class="l" href="#pf21f" data-dest-detail='[543,"XYZ",57,528,null]'>19.3.1 Constructing email messages with Velocity</a></li><li><a class="l" href="#pf221" data-dest-detail='[545,"XYZ",57,567,null]'>19.3.2 Using Thymeleaf to create email messages</a></li></ul></li><li><a class="l" href="#pf223" data-dest-detail='[547,"XYZ",57,492,null]'>19.4 Summary</a></li></ul></li><li><a class="l" href="#pf224" data-dest-detail='[548,"XYZ",78,554,null]'>20 Managing Spring beans with JMX</a><ul><li><a class="l" href="#pf225" data-dest-detail='[549,"XYZ",57,391,null]'>20.1 Exporting Spring beans as MBeans</a><ul><li><a class="l" href="#pf228" data-dest-detail='[552,"XYZ",66,380,null]'>20.1.1 Exposing methods by name</a></li><li><a class="l" href="#pf22a" data-dest-detail='[554,"XYZ",66,322,null]'>20.1.2 Using interfaces to define MBean operations and attributes</a></li><li><a class="l" href="#pf22b" data-dest-detail='[555,"XYZ",57,237,null]'>20.1.3 Working with annotation-driven MBeans</a></li><li><a class="l" href="#pf22d" data-dest-detail='[557,"XYZ",57,528,null]'>20.1.4 Handling MBean collisions</a></li></ul></li><li><a class="l" href="#pf22e" data-dest-detail='[558,"XYZ",57,529,null]'>20.2 Remoting MBeans</a><ul><li><a class="l" href="#pf22e" data-dest-detail='[558,"XYZ",57,359,null]'>20.2.1 Exposing remote MBeans</a></li><li><a class="l" href="#pf22f" data-dest-detail='[559,"XYZ",57,404,null]'>20.2.2 Accessing remote MBeans</a></li><li><a class="l" href="#pf231" data-dest-detail='[561,"XYZ",57,615,null]'>20.2.3 Proxying MBeans</a></li></ul></li><li><a class="l" href="#pf232" data-dest-detail='[562,"XYZ",66,542,null]'>20.3 Handling notifications</a><ul><li><a class="l" href="#pf233" data-dest-detail='[563,"XYZ",57,252,null]'>20.3.1 Listening for notifications</a></li></ul></li><li><a class="l" href="#pf234" data-dest-detail='[564,"XYZ",66,352,null]'>20.4 Summary</a></li></ul></li><li><a class="l" href="#pf235" data-dest-detail='[565,"XYZ",66,575,null]'>21 Simplifying Spring development with Spring Boot</a><ul><li><a class="l" href="#pf236" data-dest-detail='[566,"XYZ",66,399,null]'>21.1 Introducing Spring Boot</a><ul><li><a class="l" href="#pf236" data-dest-detail='[566,"XYZ",66,139,null]'>21.1.1 Adding starter dependencies</a></li><li><a class="l" href="#pf23b" data-dest-detail='[571,"XYZ",57,580,null]'>21.1.2 Autoconfiguration</a></li><li><a class="l" href="#pf23b" data-dest-detail='[571,"XYZ",57,307,null]'>21.1.3 The Spring Boot CLI</a></li><li><a class="l" href="#pf23c" data-dest-detail='[572,"XYZ",66,471,null]'>21.1.4 The Actuator</a></li></ul></li><li><a class="l" href="#pf23c" data-dest-detail='[572,"XYZ",66,278,null]'>21.2 Building an application with Spring Boot</a><ul><li><a class="l" href="#pf23f" data-dest-detail='[575,"XYZ",66,615,null]'>21.2.1 Handling requests</a></li><li><a class="l" href="#pf241" data-dest-detail='[577,"XYZ",57,390,null]'>21.2.2 Creating the view</a></li><li><a class="l" href="#pf243" data-dest-detail='[579,"XYZ",57,615,null]'>21.2.3 Adding static artifacts</a></li><li><a class="l" href="#pf244" data-dest-detail='[580,"XYZ",66,567,null]'>21.2.4 Persisting the data</a></li><li><a class="l" href="#pf246" data-dest-detail='[582,"XYZ",66,433,null]'>21.2.5 Try it out</a></li></ul></li><li><a class="l" href="#pf249" data-dest-detail='[585,"XYZ",57,555,null]'>21.3 Going Groovy with the Spring Boot CLI</a><ul><li><a class="l" href="#pf249" data-dest-detail='[585,"XYZ",57,143,null]'>21.3.1 Writing a Groovy controller</a></li><li><a class="l" href="#pf24c" data-dest-detail='[588,"XYZ",66,615,null]'>21.3.2 Persisting with a Groovy repository</a></li><li><a class="l" href="#pf24d" data-dest-detail='[589,"XYZ",57,615,null]'>21.3.3 Running the Spring Boot CLI</a></li></ul></li><li><a class="l" href="#pf24e" data-dest-detail='[590,"XYZ",66,490,null]'>21.4 Gaining application insight with the Actuator</a></li><li><a class="l" href="#pf251" data-dest-detail='[593,"XYZ",57,220,null]'>21.5 Summary</a></li></ul></li></ul></li><li><a class="l" href="#pf253" data-dest-detail='[595,"XYZ",52,529,null]'>index</a><ul><li><a class="l" href="#pf253" data-dest-detail='[595,"XYZ",66,466,null]'>Symbols</a></li><li><a class="l" href="#pf253" data-dest-detail='[595,"XYZ",66,363,null]'>A</a></li><li><a class="l" href="#pf256" data-dest-detail='[598,"XYZ",279,154,null]'>B</a></li><li><a class="l" href="#pf258" data-dest-detail='[600,"XYZ",66,482,null]'>C</a></li><li><a class="l" href="#pf25b" data-dest-detail='[603,"XYZ",270,348,null]'>D</a></li><li><a class="l" href="#pf25c" data-dest-detail='[604,"XYZ",279,264,null]'>E</a></li><li><a class="l" href="#pf25e" data-dest-detail='[606,"XYZ",279,314,null]'>F</a></li><li><a class="l" href="#pf25f" data-dest-detail='[607,"XYZ",270,482,null]'>G</a></li><li><a class="l" href="#pf260" data-dest-detail='[608,"XYZ",66,511,null]'>H</a></li><li><a class="l" href="#pf260" data-dest-detail='[608,"XYZ",279,352,null]'>I</a></li><li><a class="l" href="#pf262" data-dest-detail='[610,"XYZ",66,532,null]'>J</a></li><li><a class="l" href="#pf263" data-dest-detail='[611,"XYZ",270,471,null]'>K</a></li><li><a class="l" href="#pf263" data-dest-detail='[611,"XYZ",270,407,null]'>L</a></li><li><a class="l" href="#pf264" data-dest-detail='[612,"XYZ",66,552,null]'>M</a></li><li><a class="l" href="#pf267" data-dest-detail='[615,"XYZ",270,512,null]'>N</a></li><li><a class="l" href="#pf268" data-dest-detail='[616,"XYZ",66,532,null]'>O</a></li><li><a class="l" href="#pf268" data-dest-detail='[616,"XYZ",66,154,null]'>P</a></li><li><a class="l" href="#pf269" data-dest-detail='[617,"XYZ",270,394,null]'>Q</a></li><li><a class="l" href="#pf269" data-dest-detail='[617,"XYZ",270,262,null]'>R</a></li><li><a class="l" href="#pf26b" data-dest-detail='[619,"XYZ",57,256,null]'>S</a></li><li><a class="l" href="#pf26f" data-dest-detail='[623,"XYZ",57,364,null]'>T</a></li><li><a class="l" href="#pf270" data-dest-detail='[624,"XYZ",66,553,null]'>U</a></li><li><a class="l" href="#pf270" data-dest-detail='[624,"XYZ",66,183,null]'>V</a></li><li><a class="l" href="#pf270" data-dest-detail='[624,"XYZ",279,282,null]'>W</a></li><li><a class="l" href="#pf271" data-dest-detail='[625,"XYZ",270,302,null]'>X</a></li><li><a class="l" href="#pf271" data-dest-detail='[625,"XYZ",270,206,null]'>Z</a></li></ul></li><li><a class="l" href="#pf272" data-dest-detail='[626,"Fit"]'>Back Cover</a></li></ul>